{"version":3,"sources":["Component/ColorBoxes.js","App.js","index.js"],"names":["ColorBoxes","state","nColors","props","colors","map","c","Math","floor","random","length","changeColor","index","newColor","arrCopy","splice","setState","className","this","color","onClick","key","style","backgroundColor","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEMA,E,4MAMFC,MAAQ,CACJC,QAAS,EAAKC,MAAMC,OAAOC,KAAI,SAAAC,GAAC,OAAIC,KAAKC,MAAMD,KAAKE,SAAW,EAAKN,MAAMC,OAAOM,Y,EAIrFC,YAAc,SAACC,GACX,IAAIC,EAAWN,KAAKC,MAAMD,KAAKE,SAAW,EAAKN,MAAMC,OAAOM,QACxDI,EAAO,YAAO,EAAKb,MAAMC,SACzBY,EAAQF,KAAWC,GACnBA,GAAsB,EACtBC,EAAQC,OAAOH,EAAO,EAAGC,GACzB,EAAKG,SAAS,CACVd,QAASY,KAEPA,EAAQF,KAAW,EAAKT,MAAMC,OAAOM,QAC3CG,GAAsB,EACtBC,EAAQC,OAAOH,EAAO,EAAGC,GACzB,EAAKG,SAAS,CACVd,QAASY,MAGbA,EAAQC,OAAOH,EAAO,EAAGC,GACzB,EAAKG,SAAS,CACVd,QAASY,M,uDAKX,IAAD,OACL,OACI,yBAAKG,UAAU,eACX,4BACKC,KAAKjB,MAAMC,QAAQG,KAAI,SAACc,EAAOP,GAC5B,OACA,wBAAIQ,QAAS,kBAAM,EAAKT,YAAYC,IAAQS,IAAG,UAAKT,GAASK,UAAU,QAAQK,MAAO,CAAEC,gBAAiB,EAAKpB,MAAMC,OAAOe,KAAW,EAAKhB,MAAMC,OAAOe,a,GAxCvJK,aAAnBxB,EAEKyB,aAAe,CAClBrB,OAAQ,CAAC,OAAQ,QAAS,OAAQ,UAAW,QAAS,SAAU,SAAU,MAAO,SAAU,OAAQ,OAAQ,QAAS,SAAU,OAAQ,OAAQ,OAAQ,OAAQ,WA8CvJJ,QCtCA0B,MATf,WACE,OACE,yBAAKT,UAAU,OACb,yDACA,kBAAC,EAAD,QCJNU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1e69a464.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass ColorBoxes extends Component {\r\n\r\n    static defaultProps = {\r\n        colors: [\"aqua\", \"black\", \"blue\", \"fuchsia\", \"green\", \"maroon\", \"purple\", \"red\", \"orange\", \"gray\", \"lime\", \"olive\", \"yellow\", \"teal\", \"navy\", \"plum\", \"peru\", \"indigo\"]\r\n    }\r\n\r\n    state = {\r\n        nColors: this.props.colors.map(c => Math.floor(Math.random() * this.props.colors.length))\r\n    }\r\n\r\n\r\n    changeColor = (index) => {\r\n        let newColor = Math.floor(Math.random() * this.props.colors.length);\r\n        let arrCopy = [...this.state.nColors];\r\n        if (arrCopy[index] === newColor) {\r\n            newColor = newColor + 1;\r\n            arrCopy.splice(index, 1, newColor);\r\n            this.setState({\r\n                nColors: arrCopy\r\n            })\r\n        }else if (arrCopy[index] === this.props.colors.length) {\r\n            newColor = newColor - 2;\r\n            arrCopy.splice(index, 1, newColor);\r\n            this.setState({\r\n                nColors: arrCopy\r\n            })\r\n        } else {\r\n            arrCopy.splice(index, 1, newColor);\r\n            this.setState({\r\n                nColors: arrCopy\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"color-boxes\">\r\n                <ul>\r\n                    {this.state.nColors.map((color, index) => {\r\n                        return (\r\n                        <li onClick={() => this.changeColor(index)} key={`${index}`} className=\"boxes\" style={{ backgroundColor: this.props.colors[color] }}>{this.props.colors[color]}</li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColorBoxes;","import React from 'react';\r\nimport './App.css';\r\nimport ColorBoxes from './Component/ColorBoxes';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>React ColorBoxes Exercise</h1>\r\n      <ColorBoxes />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}